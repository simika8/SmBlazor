@page "/fetchdata"

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}


@renderBindableTextBox(Person, nameof(Person.Name))
<div>@Person.Name</div>

@code {

    public PersonTest Person { get; set; } = new PersonTest { Name = "David" };
    public class PersonTest
    {
        public string Name { get; set; }
    }
    private RenderFragment renderBindableTextBox(object o, string PropName) {
        RenderFragment item = b => {
            b.OpenElement(0, "input");
            b.AddAttribute(1, "Text", o.GetType().GetProperty(PropName).GetValue(o).ToString());
            b.AddAttribute(2, "TextChanged", EventCallback.Factory.Create<System.String>(this, str => { o.GetType().GetProperty(PropName).SetValue(o, str); }));
            b.CloseComponent();
        };
        return item;
    }
}