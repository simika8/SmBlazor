@using ModelsDemo
@using System.Text.Json.Serialization
@using SmBlazor

<Grid @ref="Grid" Settings=@Settings/>

@code {
    private Grid? Grid { get; set; }
    private Settings Settings { get; set; } = new Settings("ProductsList");

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(0);
        Settings.DataSource = new ODataSource("https://smdemobackend.azurewebsites.net/odata", "Product", new List<string>() { "Ext", "Stocks" });

        //var exmodel = DtoTypeBuilder.ExampleSmEdmModel();
        //Gd.RowType = DtoTypeBuilder.GetType(exmodel, "Product");
        //Gd.DataSource.Aaaa();

        Settings.Height = 300;
        //Gd.RowType = typeof(Models.Product);
        //Gd.RowType = typeof(SmBlazor.Product);

        //opcionális cuccok
        //Gd.ColumnInfo.Columns.Add(new Column() { FieldName = "Stocks", Width = 60, PropertyType = typeof(List<Models.InventoryStock>), Visible = false});
        Settings.Columns.Add(new Column("Ext.ProbaList", typeof(List<string>)) { Width = 60, Visible = false, });
        Settings.Columns.Add(new Column("Ext.Aa.Proba", typeof(string)) {Width = 60, Visible = false, });
        Settings.Columns.Add(new Column("Id", typeof(Guid)) {Title = "Id", Width = 150,});
        Settings.Columns.Add(new Column("Name", typeof(string)) {Title = "Név", Width = 170,});
        Settings.Columns.Add(new Column("Active", typeof(bool)) {Title = "Aktív", Width = 20,});
        Settings.Columns.Add(new Column("Price", typeof(double)) {Title = "Ár", Width = 40, RightAligned = false,});
        Settings.Columns.Add(new Column("Rating", typeof(int)) {Width = 20,});
        Settings.Columns.Add(new Column("ReleaseDate", typeof(DateTime)) {Width = 90,});
        Settings.Columns.Add(new Column(typeof(ModelsDemo.ProductDemo), "Type") {Width = 40,});
        Settings.Columns.Add(new Column("Ext.Description", typeof(string)) {Width = 60,});
        Settings.StyleSettings = Settings.StyleSettings & (~StyleSettings.BasicScrollBar) | StyleSettings.ExtraScrollBar;
         //Gd.FlexibleWidthColumn = Gd.GetColumn("Price");
        /**/
    }

}
